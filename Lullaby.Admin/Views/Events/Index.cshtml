@using Lullaby.Admin.Services
@model Lullaby.Admin.ViewModels.EventsListViewModel
@inject IUserInterfaceDateTimeOffsetService UserInterfaceDateTimeOffsetService

@{
    ViewBag.Title = "イベント検索";
    Layout = "_Layout";
}

<header class="pb-3 mb-5 border-bottom">
    <h1>イベント検索</h1>
    <form class="row g-3" asp-controller="Events" asp-action="Index" method="get">
        <div class="col-xxl-3">
            <label for="groupKey" class="form-label">グループ</label>
            <select id="groupKey" name="groupKey" class="form-select">
                <option value="">全てのグループ</option>
                @foreach (var group in Model.Groups)
                {
                    <option value="@group.GroupKey" selected="@(group.GroupKey == Model.Request.GroupKey)">@group.GroupName</option>
                }
            </select>
        </div>
        <div class="col-xxl-5">
            <label for="eventName" class="form-label">イベント名</label>
            <input type="text" id="eventName" name="eventName" class="form-control" placeholder="イベント名" value="@Model.Request.EventName"/>
        </div>
        <div class="col-xxl-2">
            <label for="startDateTime" class="form-label">イベント開始日</label>
            <input type="date" id="startDateTime" name="startDateTime" class="form-control" value="@Model.Request.StartDateTime"/>
        </div>
        <div class="col-xxl-2">
            <label for="endDateTime" class="form-label">イベント終了日</label>
            <input type="date" id="endDateTime" name="endDateTime" class="form-control" value="@Model.Request.EndDateTime"/>
        </div>
        <button class="btn btn-outline-primary" type="submit">検索</button>
    </form>
</header>
<main>
    <div class="row g-3">
        <div class="d-flex justify-content-center">
            @await Component.InvokeAsync("BootstrapPaginator", new { currentPage = Model.Result.CurrentPage, totalPages = Model.Result.TotalPages })
        </div>
        <div>
            @(Model.Result.TotalEvents)件中@(Model.Result.From)から@(Model.Result.To)件目を表示中
        </div>
        @if (Model.Result.TotalEvents == 0)
        {
            <div class="col-12">
                <p>一致するイベントはありませんでした</p>
            </div>
        }
        @foreach (var groupEvent in Model.Result.Events)
        {
            <div class="card">
                <div class="card-body">
                    <div class="card-title">
                        <h5 class="d-flex align-items-center gap-2">
                            <span>@groupEvent.EventName</span>
                            <span class="badge text-bg-primary">
                                @Model.Groups.First(v => v.GroupKey == groupEvent.GroupKey).GroupName
                            </span>
                        </h5>
                    </div>
                    <div class="card-text">
                        <ul>
                            @if (groupEvent.IsDateTimeDetailed)
                            {
                                <li>
                                    イベント日時: @UserInterfaceDateTimeOffsetService.ConvertToString(@groupEvent.EventStarts) から @UserInterfaceDateTimeOffsetService.ConvertToString(@groupEvent.EventEnds) まで
                                </li>
                            }
                            else
                            {
                                <li>
                                    イベント日時: @UserInterfaceDateTimeOffsetService.ConvertToShortString(@groupEvent.EventStarts)
                                </li>
                            }
                            @if (groupEvent.EventPlace != null)
                            {
                                <li>
                                    イベント開催地: @groupEvent.EventPlace
                                </li>
                            }
                            <li>
                                作成日時: @UserInterfaceDateTimeOffsetService.ConvertToString(groupEvent.CreatedAt)
                            </li>
                            <li>
                                更新日時: @UserInterfaceDateTimeOffsetService.ConvertToString(groupEvent.UpdatedAt)
                            </li>
                        </ul>
                        <div>
                            @foreach (var line in groupEvent.EventDescription.Split('\n'))
                            {
                                <p class="lh-sm">@line</p>
                            }
                        </div>
                    </div>
                </div>
            </div>
        }

        <div class="d-flex justify-content-center">
            @await Component.InvokeAsync("BootstrapPaginator", new { currentPage = Model.Result.CurrentPage, totalPages = Model.Result.TotalPages })
        </div>
    </div>
</main>
